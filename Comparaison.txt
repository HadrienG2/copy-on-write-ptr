=== VERSION AVEC STD::ONCE_FLAG === 

[NOTE: Les sémantiques de std::once_flag sont trop limitées pour mes besoins, j'utilise juste sa perf comme baseline]

Creating 20000000 pointers from raw pointers
With a raw shared_ptr, this operation takes 2.10385 s
With cow_ptr, it takes 5.29563 s (2.51711x slower)

Creating AND moving 100000000 pointers
With a raw shared_ptr, this operation takes 13.5634 s
With cow_ptr, it takes 45.7958 s (3.37642x slower)

Copying 40000000 pointers
With a raw shared_ptr, this operation takes 2.292 s
With cow_ptr, it takes 2.71524 s (1.18466x slower)

Reading from 128000000 pointers
With a raw shared_ptr, this operation takes 2.30456 s
With cow_ptr, it takes 2.55358 s (1.10806x slower)

Performing 200000000 pointer copies AND cold writes
With a raw shared_ptr, this operation takes 11.1385 s
With cow_ptr, it takes 108.648 s (9.75427x slower)

Performing 800000000 warm pointer writes
With a raw shared_ptr, this operation takes 14.4702 s
With cow_ptr, it takes 46.8538 s (3.23795x slower)


=== COW_OWNERSHIP_FLAG BASE SUR UN MUTEX ===

Creating 20000000 pointers from raw pointers
With a raw shared_ptr, this operation takes 2.32219 s
With cow_ptr, it takes 2.49065 s (1.07254x slower)       => 2.3x plus vite (synchro inutile supprimée)

Creating AND moving 100000000 pointers
With a raw shared_ptr, this operation takes 13.908 s
With cow_ptr, it takes 17.8499 s (1.28343x slower)       => 2.6x plus vite (synchro inutile supprimée)

Copying 40000000 pointers
With a raw shared_ptr, this operation takes 2.42367 s
With cow_ptr, it takes 2.77948 s (1.14681x slower)       => Equivalent

Reading from 128000000 pointers
With a raw shared_ptr, this operation takes 2.31064 s
With cow_ptr, it takes 2.56016 s (1.10798x slower)       => Equivalent

Performing 200000000 pointer copies AND cold writes
With a raw shared_ptr, this operation takes 12.036 s
With cow_ptr, it takes 75.8081 s (6.29843x slower)       => 1.5x plus vite (synchro efficace + universal ref)

Performing 800000000 warm pointer writes
With a raw shared_ptr, this operation takes 14.4818 s
With cow_ptr, it takes 40.6137 s (2.80447x slower)       => 1.2x plus vite (synchro efficace + universal ref)


=== COW_OWNERSHIP_FLAG BASE SUR DES ATOMICS SEQ_CST ===

Creating 20000000 pointers from raw pointers
With a raw shared_ptr, this operation takes 2.31351 s
With cow_ptr, it takes 2.68376 s (1.16003x slower)       => Sans intérêt vs mutex : 1.1x plus lent

Creating AND moving 100000000 pointers
With a raw shared_ptr, this operation takes 13.7845 s
With cow_ptr, it takes 18.5216 s (1.34365x slower)       => Sans intérêt vs mutex : équivalent et plus compliqué

Copying 40000000 pointers
With a raw shared_ptr, this operation takes 2.37655 s
With cow_ptr, it takes 3.07365 s (1.29332x slower)       => Sans intérêt vs mutex : 1.1x plus lent

Reading from 128000000 pointers
With a raw shared_ptr, this operation takes 2.28324 s
With cow_ptr, it takes 2.55789 s (1.12029x slower)       => Sans intérêt vs mutex : équivalent et plus compliqué

Performing 200000000 pointer copies AND cold writes
With a raw shared_ptr, this operation takes 11.3908 s
With cow_ptr, it takes 83.2435 s (7.30799x slower)       => Sans intérêt vs mutex : 1.2x plus lent

Performing 800000000 warm pointer writes
With a raw shared_ptr, this operation takes 14.3253 s
With cow_ptr, it takes 36.3265 s (2.53583x slower)       => Sans intérêt vs mutex : seulement 1.1x plus rapide


=== COW_OWNERSHIP_FLAG BASE SUR DES ATOMICS AVEC MEMORY_ORDER SOIGNE ===

Creating 20000000 pointers from raw pointers
With a raw shared_ptr, this operation takes 2.2154 s
With cow_ptr, it takes 2.48141 s (1.12007x slower)       => Equivalent au cas seq_cst

Creating AND moving 100000000 pointers
With a raw shared_ptr, this operation takes 13.1002 s
With cow_ptr, it takes 18.6254 s (1.42176x slower)       => Equivalent au cas seq_cst

Copying 40000000 pointers
With a raw shared_ptr, this operation takes 2.15515 s
With cow_ptr, it takes 2.80871 s (1.30325x slower)       => Equivalent en cas seq_cst

Reading from 128000000 pointers
With a raw shared_ptr, this operation takes 2.30398 s
With cow_ptr, it takes 2.55854 s (1.11048x slower)       => Equivalent au cas seq_cst

Performing 200000000 pointer copies AND cold writes
With a raw shared_ptr, this operation takes 10.9874 s
With cow_ptr, it takes 77.9545 s (7.09492x slower)       => Un peu plus proche du mutex, toujours en-dessous

Performing 800000000 warm pointer writes
With a raw shared_ptr, this operation takes 14.4191 s
With cow_ptr, it takes 27.7872 s (1.92711x slower)       => Devient intéressant vs mutex : 1.5x plus rapide


=== CONCLUSION ===

Pour ces scénarios, certes limités, les variables atomiques n'apportent qu'un bénéfice minimal par rapport aux
mutex compte tenu de leur complexité d'utilisation.

Il semble préférable de rester sur un mutex.
